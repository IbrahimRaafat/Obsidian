{"path":"Formal Methods/Lectures/lezione3.pdf","text":"FORMAL METHODS FOR SYSTEM VERIFICATION Syntax of PEPA Sabina Rossi DAIS Universit`a Ca’ Foscari Venezia Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Stochastic Process Algebra Introduction and Motivation It is based on formalisms originally developed to model concurrency. It falls within the broad class of discrete event modelling formalisms and incorporate timing and probabilistic information with the events in the system. It has a formal semantics which can be used to automatically derive an underlying Markov process (when durations are assumed to be exponentially distributed). It provides a compositional modelling formalism. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Stochastic Process Algebra Advantages of compositionality For model construction: when a system consists of interacting components, the components, and the interactions, can each be modelled separately; models have a clear structure and are easy to understand; models can be constructed systematically, by either elaboration or reﬁnement; the possibility of maintaining a library of model components, supporting model reusability, is introduced. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA PEPA is based on: components that are active units within a system; activities that capture the actions of those units; cooperation that expresses the interaction between components. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Activities Models are constructed from components which engage in activities. Every activity in PEPA has an associated duration which is a random variable with an exponential distribution. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Activities Each activity has an action type (or simply type or name) and an activity rate. Each activity has the form (α, r ) where α is the action type of the activity r is the activity rate. Each system action is uniquely typed and there is a countable set A of all possible such types. Activities with the same action type represent diﬀerent instances of the same action by the system. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Action type τ There is a special action type, denoted τ and named unknown type: it represents an unknown or unimportant system action. Activities with unknown type will be private to the component in which they occur. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Duration of an activity Each activity (also those with action type τ ) has an associated duration. The duration of an activity is an exponentially distributed random variable. Since an exponential distribution is uniquely determined by its parameter, the duration of an activity is represented by a single real number parameter. This parameter is called the activity rate (or simply rate) of the activity: it may be any positive real number, or the distinguished symbol ⊤ which should be read as unspeciﬁed. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Some notations A: set of all actions types, including τ R+: set of all positive real numbers, including ⊤ Act = A × R+: set of all activities Hence, an activity is represented as: a = (α, r ) where a ∈ Act = A × R+ denotes the activity α ∈ A is the action type r ∈ R+ is the activity rate. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Duration of an activity When enabled an activity a = (α, r ) will delay for a period determined by its associated distribution function. The probability that the activity a = (α, r ) happens within a period of time of length t is Fa(t) = 1 − e−r t. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Syntax of PEPA Components are denoted by: P, C , Ci , Cj , S, System, . . . Activities are denoted by: a, b, c, . . . Action types are denoted by: α, β, γ, . . . or names like task, request, use, . . . Activity rates are denoted by: r , s, t, ri , si . . . sometimes we use the greek letters µ and λ Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Syntax of PEPA The combinators of the language allow expressions, or terms, to be constructed deﬁning the behaviour of components via the activities they undertake and the interactions between them. The syntax for terms in PEPA is deﬁend as follows: sequential components: S ::= (α, r ).S | S1 + S2 | A cooperating components: C ::= C1 \u0003\u0001 L C2 | C /L | S Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Preﬁx (α, r ).S The component (α, r ).S carries out activity (α, r ) which has action type α and a duration which is exponentially distributed with parameter r (mean 1/r ). The time taken for the activity to complete will be some ∆t, drawn from the distribution. The component subsequently behaves as component S. If the system is in the state (α, r ).S at some time t, the time at which it completes (α, r ) and becomes S will be t + ∆t. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Preﬁx (α, r ).S When a = (α, r ) the component (α, r ).S may be written as a.S We write (α, r ).S (α,r ) −−−→ S a.S a −→ S to denote the completion of activity (α, r ) (resp. a) and the subsequent behaviour of the system as component S. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Timing behaviour and uncertainty A delay is thus inherent in each activity in the model and the timing behaviour of the system is captured. Moreover, since the duration is a random variable, temporal uncertainty, the uncertainty of how long an action will take, is represented. It is like each activity sets a timer whenever it becomes enabled. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Competing activities If several activities are enabled at some time then each will have its own associated timer. When the ﬁrst timer ﬁnishes that activity takes place and it is said to complete or succeed. An activity is said to be preempted or aborted if another one complete ﬁrst. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Implicit resource It is assumed that there is always an implicit resource. Thus the time elapsed before activity completion represents the use of this resource by the component. For example, this resource might be: bandwidth on a communication channel processor time or CPU cycles within a processor. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Choice S1 + S2 The component S1 + S2 represents a system which may behave either as component S1 or as component S2. S1 + S2 enables all the current activities of S1 and all the current activities of S2. The ﬁrst activity to complete distinguishes one of the components S1 or S2. The other component of the choice is discarded. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Choice S1 + S2 Suppose that S1 = (α, r ).S ′ 1 S2 = (β, s).S ′ 2. At the time t0 the enabled activities of S1 + S2 are both (α, r ) and (β, s). Let ∆α and ∆β drawn from the exponential distributions of α and β, respectively. For x ∈ {α, β}: ∆x represents the time taken for the activity x. Fx (t) is the probability that ∆x ≤ t. If ∆α < ∆β then activity (α, r ) is enabled and at the time t0 + ∆α the system behaves as S ′ 1. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Choice S1 + S2 Notice that the probability that ∆α = ∆β is 0. Indeed, the continuous nature of the probability distributions ensures that the probability that S1 and S2 both completing an activity at the same time is 0, i.e., ∆α ̸= ∆β. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Choice S1 + S2 Notice that there is an underlying assumption that S1 and S2 are competing for the same implicit resource. Thus the choice combinator + represents the competition between components. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 This is in fact an indexed family of combinators, one for each possible set of action types L ⊆ A. L is named cooperation set and deﬁnes the action types on which the components must synchronize or cooperate. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 In contrast to choice, it is assumed that each component in a cooperation has its own implicit resource and that they proceed independently with any activities whose types do not occur in the cooperation set. Activities with action types in L require the simultaneous involvement of both components (both resources) in an activity of that type. The unknown action type τ , may not appear in any cooperation set, i.e., τ ̸∈ L. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 We distinguish: Individual activities : activities of C1 and C2 whose action types do not occur in L. They proceed unaﬀected. Shared activities : activities of C1 and C2 whose action types do occur in L. They will only be enabled in C1 \u0003\u0001 L C2 when they are enabled in both C1 and C2. Shared activities need to work together to achieve an action. Thus one component may become blocked, waiting for the other component to be ready to partecipate. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 Example: C1 = (α, r ).(β, s).C ′ 1 C2 = (β, t).C ′ 2 C1 \u0003\u0001 L C2 where L = {β}. (α, r ) is an individual activity. (β, s) and (β, t) are shared activities. C2 is blocked, waiting for C1 to be ready to partecipate. Action type β is enabled only when it is enabled in C1 and C2. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 When two shared activities cooperate then a new shared activity is formed by the cooperation. This activity will have the same action type as the two contributing activities and a rate reﬂecting the rate of the slower participant. The expected duration of a shared activity will be greater than or equal to the expected durations of the corresponding activities in the cooperating components. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 Example: (α, r ).C1 \u0003\u0001 {α} (α, s).C2 (α,t) −−−→ C1 \u0003\u0001 {α} C2 t represents the expected duration of the shared activity α. How can we determine t? Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 If an activity has an unspeciﬁed rate in a component, then the component is said to be passive with respect to that action type, and it does not contribute to the work involved. Example: (α, r ).C1 \u0003\u0001 {α} (α, ⊤).C2 (α,r ) −−−→ C1 \u0003\u0001 {α} C2 Component (α, ⊤).C2 is passive w.r.t. α. An example might be the role of a channel in a message passing system: the cooperation of the channel is essential if a transfer is to take place but the transfer involves no work (consumption of implicit resource) on the part of the channel. This may be regarded as one component coopting another. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Cooperation C1 \u0003\u0001 L C2 When L = ∅ is empty then \u0003\u0001 L has the eﬀect of parallel composition, allowing components to proceed concurrently without any interaction between them. We use the notation C1||C2 to represent C1 \u0003\u0001 ∅ C2 where || is the parallel combinator. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Example: Parallel composition Consider the system P||S where P = (α, r1).Q Q = (β, r2).R1 + (γ, r3).R2 S = (δ, r4).S Let t0 be the initial time, Act(P||S) = {α, δ} and x ∈ {α, δ}. ∆x represents the time taken for the activity x to complete. Fx (t) is the probability that ∆x ≤ t. Suppose that ∆α < ∆δ. Then the activity (α, r1) is enabled and at the time t0 + ∆α the system behaves ad Q||S. Now Act(Q||S) = {β, γ, δ}. Consider ∆β, ∆γ, ∆′ δ (which may be diﬀerent from ∆δ). Suppose that ∆′ δ < ∆β and ∆′ δ < ∆γ then at the time t0 + ∆α + ∆′ δ the system behaves as Q||S. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Hiding C /L C /L behaves as C except that any activities of type within the set L are hidden and they appear as the unknown type τ . τ can be regarded as an internal delay by the component. Example: let C = (α, r ).C ′ then ((α, r ).C ′)/{α} (τ ,r ) −−−→ C ′/{α} Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Hiding C /L Normally, when an activity is completed an external observer can see the type of the completed activity. The observer is also aware of the delay while the activity takes place. A hidden activity is witnessed only by its delay and the unknown type τ : The action type of a hidden activity is no longer externally accessible to an observer or to another component. The duration of an activity is unaﬀected if it is hidden. Moreover such an activity cannot be carried out in cooperation with any other component. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Informal semantics Constant A def = C We assume that there is a countable set of constants. Constants are components whose meaning is given by a deﬁning equation such as A def = C . If A def = C then A denotes a components behaving as C . Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Notations Suppose that E is a component expression which contains a variable X . E {P/X } denotes the component formed when every occurrence of X in E is replaced by the component P. More generally, an indexed set of variables ˜X may be replaced by an indexed set of components ˜P, as in E { ˜P/ ˜X }. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Precedence of PEPA operators Hiding has highest precedence with preﬁx next, followed by cooperation. Choice has the lowest precedence. 1 P/L 2 (α, r ).P 3 P \u0003\u0001 L Q 4 P + Q We can use brackets to clarify the meaning of a combination of components. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Precedence of PEPA operators: Example The component P \u0003\u0001 L1 Q \u0003\u0001 L2 R may be interpreted as (P \u0003\u0001 L1 Q) \u0003\u0001 L2 R or P \u0003\u0001 L1 (Q \u0003\u0001 L2 R). When brackets are missing we assume that the cooperation associates to the left, i.e., the above component behaves as (P \u0003\u0001 L1 Q) \u0003\u0001 L2 R. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Precedence of PEPA operators: Example The cooperation between several diﬀerent components may be ragarded as being built up in layers or levels, each cooperation combining just two components. For example, the component: ((P1 \u0003\u0001 L P2) \u0003\u0001 M P3) \u0003\u0001 K (P4 \u0003\u0001 N P5) can be regarded at the top level as Q1 \u0003\u0001 K Q2 where: Q1 def = Q3 \u0003\u0001 M P3 Q2 def = P4 \u0003\u0001 N P5 Q3 def = P1 \u0003\u0001 L P2 Components at the lowest level, which do not contain a cooperation are referred to as atomic, while those at the top level are referred to as top-level components. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Race condition A race condition governs the dynamic behaviour of a model whenever more than one activity is enabled: when many activities attempt to proceed only the fastest succeed. Of course which activity is fastest on successive computations will vary due to the nature of the random variables determining the duration of activities. The probability that a particular activity completes will be given by the ratio of the activity rate of that activity to the sum of the activity rates of all the enabled activities. We may represent a single action in a system by more than one activity in the corresponding PEPA model, if the action has more than one possible outcome. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Probabilities of the diﬀerent outcomes of an action Consider a componet engaging in an action of type α with activity rate r . Suppose that such an action may have two diﬀerent possible outcomes. Then this single action would be represented by two separate activities. The activity rates of these activities would be adjusted to capture the probabilities of the diﬀerent outcomes. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Performance Evaluation Process Algebra: PEPA Example Suppose that our system performs the action α at rate r and then, with probability 1 3 , behaves as component P and, with probability 2 3 , behaves as component Q. This system will be represented by a PEPA component as (α, r 3 ).P + (α, 2r 3 ).Q The probability of the ﬁrst activity is: r 3 ( r 3 + 2r 3 ) = r 3 r = r 3 · 1 r = 1 3 The probability of the second activity is: 2r 3 ( r 3 + 2r 3 ) = 2r 3 r = 2r 3 · 1 r = 2 3 Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION","libVersion":"0.3.2","langs":""}