{"path":"Formal Methods/Lectures/lezione5.pdf","text":"FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Sabina Rossi DAIS Universit`a Ca’ Foscari Venezia Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Passive activities Description A component may be passive with respect to an action type. This means that all activities of that type enabled by the component will have the unspeciﬁed activity rate ⊤. These activities must be shared with another component, the other component determining the rate of this shared activity. A model is said to be incomple if it has a component which is passive with respect to an individual action type. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Passive activities Probabilities of passive activities If more than one activity of a given passive type can be simultaneously enabled by a component, each unspeciﬁed activity rate must also be assigned a weight. Weights are natural numbers used to determine the relative probabilities of the possible outcomes of the activities of that action type. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Passive activities Example Consider a component which is passive with respect to action type α. Suppose that when α is completed, the component may: behave as P with probability w1 w1+w2 , or behave as Q with probability w2 w1+w2 . Then the component will be represented as: (α, w1⊤).P + (α, w2⊤).Q If no weights are assigned we assume that multiple instances have equal probabilities of occurring. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Passive activities Comparing unspeciﬁed activity rates The following inequalities and equations deﬁne the comparison and manipulation of unspeciﬁed activity rates: r < w ⊤ for all r ∈ R+ and for all w ∈ N w1⊤ < w2⊤ if w1 < w2 for all w1, w2 ∈ N w1⊤ + w2⊤ = (w1 + w2)⊤ for all w1, w2 ∈ N w1⊤ w2⊤ = w1 w2 for all w1, w2 ∈ N Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Apparent rate Intuition There are situations in which it is convinient to represent a single action of the system by more than one activity in the model. To an external observer of the system the apparent rate of activities of that type will be the same. The race condition ensures that the rate at which an activity α is done is the sum of the rates of all the enabled type α activities. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Apparent rate Deﬁnition The apparent rate of action of type α in a component P, denoted rα(P), is the sum of the rates of all activities of type α enabled in P. rα((β, r ).P) = { r if β = α 0 if β ̸= α rα(P + Q) = rα(P) + rα(Q) rα(P/L) = { rα(P) if α ̸∈ L 0 if α ∈ L rα(P \u0003\u0001 L Q) = { min(rα(P), rα(Q)) if α ∈ L rα(P) + rα(Q) if α ̸∈ L Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Apparent rate Unspeciﬁed apparent rate The apparent rate of an action type α may be unspeciﬁed. If P is deﬁned as: P def = (α, w1⊤).P1 + (α, w2⊤).P2 then the apparent rate of α in P is: rα(P) = (w1 + w2)⊤ . Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Current action types Deﬁnition The set of current action types enabled by a component P, denoted by A(P), is deﬁned as follows: A((α, r ).P) = {α} A(P + Q) = A(P) ∪ A(Q) A(P/L) = { A(P) if A(P) ∩ L = ∅ (A(P) \\ L) ∪ {τ } if A(P) ∩ L ̸= ∅ A(P \u0003\u0001 L Q) = (A(P) \\ L) ∪ (A(Q) \\ L) ∪ (A(P) ∩ A(Q) ∩ L) Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Current activities Deﬁnition The multiset of current activities of a component P, denoted by Act(P), is deﬁned as follows. First we adopt the following abbreviations: Act\\L(P) = {|(β, r ) ∈ Act(P)| β ̸∈ L|} Act∩L(P) = {|(β, r ) ∈ Act(P)| β ∈ L|} Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Current activities Deﬁnition Act((α, r ).P) = {|(α, r )|} Act(P + Q) = Act(P) ⊎ Act(Q) Act(P/L) = Act\\L(P) ⊎ {|(τ, r )| (α, r ) ∈ Act∩L(P)|} Act(P \u0003\u0001 L Q) = Act\\L(P) ⊎ Act\\L(Q) ⊎ {|(α, r )| α ∈ L, ∃(α, r1) ∈ Act∩L(P), ∃(α, r2) ∈ Act∩L(Q), r = r1 rα(P) r2 rα(Q) min(rα(P), rα(Q))|} Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Dynamic behaviour Deﬁnition The behaviour of a model is dictated by the semantic rules governing the combinators of the language. The possible evolutions of a model are captured by applying these rules exhaustively, generating a labelled transition system. This can be viewed as a graph in which each node is a state of the model (comprised of the local states of each of the components) and the arcs represent the actions which can cause the move from one state to another. Process algebra model SOS rules −−−−−−−→ Labelled multi-transition system Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Deﬁnition PEPA is deﬁned using a Plotkin-style structured operational rules (a “small step” semantics). Time is not represented explicitly in the rules but it is assumed that an activity takes some time to complete and consequently each transition represents some advance of time. The operational rules are to be read as follows: if the transitions above the inference line can be inferred, then we can infer the transition below the line. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Preﬁx, Constant, Choice and Hiding Preﬁx (α, r ).P (α,r ) −−−→ P Constant P (α,r ) −−−→ P ′ A (α,r ) −−−→ P ′ (A def = P) Choice P (α,r ) −−−→ P ′ P + Q (α,r ) −−−→ P ′ Q (α,r ) −−−→ Q ′ P + Q (α,r ) −−−→ Q ′ Hiding P (α,r ) −−−→ P ′ P/L (α,r ) −−−→ P ′/L (α ̸∈ L) P (α,r ) −−−→ P ′ P/L (τ,r ) −−−→ P ′/L (α ∈ L) Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Cooperation (Cooperation) (α ̸∈ L) P (α,r ) −−−→ P ′ P \u0003\u0001 L Q (α,r ) −−−→ P ′ \u0003\u0001 L Q (α ̸∈ L) Q (α,r ) −−−→ Q ′ P \u0003\u0001 L Q (α,r ) −−−→ P \u0003\u0001 L Q ′ (α ̸∈ L) (Cooperation) (α ∈ L) P (α,r1) −−−→ P ′ Q (α,r2) −−−→ Q ′ P \u0003\u0001 L Q (α,r ) −−−→ P ′ \u0003\u0001 L Q ′ (α ∈ L) where r = r1 rα(P) r2 rα(Q) min(rα(P), rα(Q)) Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Cooperation and shared activities The apparent rate of a shared action type in the component P \u0003\u0001 L Q, i.e., α ∈ L, is taken to be the slower of the apparent rates of that action type in P and Q. It is assumed that in general both components of a cooperation will need to complete some work for the shared activity to be completed. In the case where the apparent rate is unspeciﬁed in one component the apparent rate will be completely determined by the other component. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Cooperation and shared activities We assume independence between the choice of outcome made by each of the cooperating components and choose the rate of each shared activity to maintain the same probability of outcome on each of the components. Example: consider P \u0003\u0001 L Q. Let (α, r1) ∈ Act(P), i.e., α occurs in P with probability r1 rα(P) . Let (α, r2) ∈ Act(Q), i.e., α occurs in Q with probability r2 rα(Q) . Assuming independence of choice in P and Q, the probability of (α, r ) ∈ Act(P \u0003\u0001 L Q) is r1 rα(P) × r2 rα(Q) . Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Cooperation and shared activities PEPA assumes bounded capacity: that is, a component cannot be made to perform an activity faster by cooperation, so the rate of a shared activity is the minimum of the apparent rates of the activity in the cooperating components. The apparent rate of a component P with respect to action type α is the total capacity of component P to carry out activities of type α, denoted rα(P). When enabled an activity, a = (α, λ), will delay for a period determined by its associated distribution function, i.e., the probability that the activity a happens within a period of time of length t is Fa(t) = 1 − e−λt. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Multi-way cooperation Cooperation in PEPA is multi-way. Two, three, four or more partners may cooperate, and they all need to synchronise for the activity to happen. For example the system ((α, r ).P \u0003\u0001 α (α, s).Q) \u0003\u0001 α (α, t).R will have a three-way synchronization between P, Q and R on the activity of type α. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Structured Operational Semantics Multi-way cooperation The cooperation sets can make a big diﬀerence in the behaviour. Example 1: ((α, r ).P||(α, s).Q) \u0003\u0001 α (α, t).R will have P and Q competing to cooperate with R giving rise to two possible α type activities, only one of which can proceed. Example 2: ((α, r ).P \u0003\u0001 α (α, s).Q)||(α, t).R will have two α type activities: one synchronising P and Q and one in R alone, both of which can proceed. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Labelled Multi-Transition System Deﬁnition A labelled transition system is a triple (S, T , { t −→ | t ∈ T }) where S is a set of states T is a set of transition labels t −→⊆ S × S is a transition relation for each t ∈ T . A labelled multi-transition system is a triple as above where t −→ is a multi-relation in which the number of instances of a relation between states is recognized. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Labelled Multi-Transition System Deﬁnition PEPA may be regarded as a labelled multi-transition system (C, Act, { (α,r ) −−−→ | (α, r ) ∈ Act}) where C is the set of all components Act is the set of all activities (α,r ) −−−→⊆ C × C is the multi-transition relation given by the rules of PEPA operational semantics. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Derivatives of a PEPA component P Deﬁnition If P (α,r ) −−−→ P ′ then P ′ is called a one-step derivative of P. More generally, if P (α1,r1) −−−−→ . . . (αn,rn) −−−−→ P ′ then P ′ is called a derivative of P. The derivative set of a PEPA component P, denoted ds(P), is deﬁned as the smallest set of components such that: if P def = P0 then P0 ∈ ds(P), if Pi ∈ ds(P) and there exists a ∈ Act(Pi ) such that Pi a −→ Pj then Pj ∈ ds(P). Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Derivatives of a PEPA component P Deﬁnition The derivative set of a component P is the set of all PEPA components representing all the reachable states of the system modeled by P. The derivatives of P are the states of the labelled multi-transition system (or derivation graph) of P. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Derivation graph for a component P Deﬁnition Given a PEPA component P and its derivative set ds(P), the derivation graph of P, denoted D(P), is the labelled directed multigraph whose set of nodes is ds(P) and whose multiset of arcs A is deﬁned by: The elements of A are taken from the set ds(P) × ds(P) × Act ⟨Pi , Pj , a⟩ occurs in A with the same multiplicity as the number of distinct inference trees which infer Pi a −→ Pj . The initial component P0, where P def = P0, is taken to be the initial node of the graph. Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION Complete set of action types Deﬁnition The complete set of action types of a component P, denoted by ⃗A(P) is the set of action types which are used within the derivation graph of a system and is deﬁned as: ⃗A(P) = ⋃ Pi ∈ds(P) A(Pi ) . Sabina Rossi FORMAL METHODS FOR SYSTEM VERIFICATION","libVersion":"0.3.2","langs":""}